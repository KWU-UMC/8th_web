/*기본 틀 잡기 위함*/
/*"*" 는 전체 선택자임*/
*{
    margin: 0;/*바깥쪽 여백*/
    padding: 0;/*안쪽 여백*/
    box-sizing: border-box;/*전체 넓이(레이아웃이 깨지지 않도록 요소 크기를 일정하게 유지*/
}

body{
   /*폰트를 지정하는 방식
   Roboto를 사용할 건데, 없으면 sans=serif를 사용할거야. 라는 의미미*/
   font-family: 'Roboto', sans-serif;
   /*display : html 요소가 어떻게 배치가 될 지를 결정하는 속성
   flex : 가로 세로로(한 방향만 지정 가능) 정렬에 유연한 레이아웃 시스템
   gird: 가로*세로 레이아웃을 만들 때 유리*/
   display: flex;
   /*위에 flexbox의 레이아웃에서 요소를 정렬하는 속성(display: flex) 설정 상태에서 사용해야 함*/
   /*가로 중앙 배치*/
   justify-content: center;
   /*세로 중앙 배치*/
   align-items: center;
   /*내가 원하는 위치로 글씨를 움직이려면 지정이 필요함(height는 해당 글씨의 높이를 지정)*/
   height: 100vh;/*500px도 나뿌지 않음*/
   /*백그라운드 색상*/
    background-color: #b39ddb;
}

.todo-container{
    background-color: white;
    padding: 20px;/*20px*/
    border-radius: 12px;/*각진 틀을 둥글게 해줌*/
    /*[가로 그림자 위치] [세로 그림자 위치] [그림자 흐림 정도(클수록 더 퍼짐)]
    [그림자 색상]*/
    box-shadow: 0 4px 5px rgba(0,0,0,0.1);/*그림자*/
    width: 350px;/*가로 너비*/
    text-align: center;/*요소 안 텍스트를 가운데 정렬*/
}

.todo-container__header{
    font-size: 24px;
    margin-bottom: 16px; /*해당 요소를 중심으로 바깥쪽 밑 여백*/
}

.todo-container__form{
    /*요소가 여러 개일 때 자식 요소들의 배치를 자동적으로
    조절하기 위해 필요한 용도
    얘가 없으면 내가 직접 지정을 해야하고 맞춰서 조정하는 수작업이 일어남*/
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
}

.todo-container__input{
    /*다른 요소의 크기는 옆으로 나머지는 내가 지정한 gap 제외 전체를 input으로 채우고 싶을 때 사용*/
    flex: 1;
    padding: 8px;
    border: 1px solid #ccc;/*테두리 스타일이 solid(실선)*/
    border-radius: 6px;
    font-size: 14px;
}

.todo-container__button{
    background-color: #28a745;/*green 이라 해도 됨*/ 
    color: white;
    border: none; /*없도록*/
    padding : 8px 12px; /*[위 아래] [왼 오른]*/
    cursor: pointer;/*눌리는 것을 사용자가 알아챌 수 잇도록 하기*/
    border-radius: 6px;
    /*0.3초간은 부드럽게 변하도록 하는 것
    이것만 있으면 사실 이 코드는 작동하지 않음
    background가 언제 바뀌는 지를 지정을 해줘야함함*/
    transition: background-color 0.3s ease;
}

/*button에 가져다 댔을 때 background를 바꾸는 형식으로 구현*/
.todo-container__button:hover{
    background-color: green;
}

.render-container{
    display: flex;
    justify-content: space-between;/*좌우로 찍기 위함*/
    gap: 20px/*자식 요소간의 최소 간격*/
}

.render-container__title{
    font-size: 18px;
    margin-bottom: 10px;

    /*해당 2개의 값은 기본 값이라 없어도 됨*/
    display: flex;
    flex-direction: row;/*display: flex 가 적용된 부모 요소의 자식 요소들을 row 방향으로 정렬*/
    justify-content: center;
}

/*display: flex;
이걸 안해주는 이유는?
display: flex는 부모 요소가 자식 요소들을 어떻게 배치할지를 결정하는 속성
자식 요소가 어떤 형태인지를 미리 알고 있어야함
즉, 어떤 구조로 추가될지 아직 미정인 지금 현 상황에서 display: flex는 사용 불가임*/
.render-container__section{
    width:100%; /*전체를 다 채우기 위함*/
    text-align: left;
}

.render-container__list{
    /*list의 특유의 앞에 점 붙는거 없애기*/
    list-style: none;
    padding: 0;
    margin: 0;
}

.render-container__item{
    display: flex;
    justify-content: space-between;
    align-items: center;

    padding: 8px;
    border-bottom: 1px solid #ccc;
    background-color: #f9f9f9;
    border-radius: 6px;
    margin-bottom: 6px;
    width: 100%;
}

.render-container__item-text{
    flex: 1;
    /*줄 바꿈 없이 한 줄로 텍스트를 표시하는 것
    white-space: nowrap;*/
}

.render-container__item-button{
    background-color: #dc3545;
    color:white;
    border: none;
    border-radius: 6px;
    padding: 6px 10px;
    cursor: pointer;
    font-size: 12px;
    transition: background-color 0.3ms ease;
}

.render-container__item-button:hover{
    background-color: red;
}